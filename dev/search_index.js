var documenterSearchIndex = {"docs":
[{"location":"plot_pdf/#Plot-PDF","page":"Plot PDF","title":"Plot PDF","text":"","category":"section"},{"location":"plot_pdf/","page":"Plot PDF","title":"Plot PDF","text":"Plot PDF utilities.","category":"page"},{"location":"plot_pdf/","page":"Plot PDF","title":"Plot PDF","text":"plot_pdf\nplot_pdf_in_unicode","category":"page"},{"location":"plot_pdf/#SeisPDF.plot_pdf","page":"Plot PDF","title":"SeisPDF.plot_pdf","text":"plot_pdf(pdf::Array{<:Real, 2}, center_periods::Array{<:Real, 1}; mindb::Real=-200, maxdb::Real=-50, db_interval::Real=1, kw...)\n\nPlot PDF using GMT.jl.\n\nArguments\n\npdf::Array{<:Real, 2}: the matrix storing PDF.\ncenter_periods::Array{<:Real, 1}: the center periods.\n\nOptional\n\nmindb::Real: the minimum range of PDF. Measured in dB.\nmaxdb::Real: the maximum range of PDF. Measured in dB.\ndb_interval::Real: the interval of PDF. Measured in dB.\nkw: the keyword arguments passed to GMT.jl. For example:\nYou can use plot_pdf(pdf, center_periods; show=true) just to show the graph.\nYou can use plot_pdf(pdf, center_periods; show=true, savefig=\"foo.png\") to show and save the graph to \"foo.png\".\nYou can use plot_pdf(pdf, center_periods; show=false, savefig=\"foo.png\") to just save the graph to \"foo.png\".\n\n\n\n\n\n","category":"function"},{"location":"plot_pdf/#SeisPDF.plot_pdf_in_unicode","page":"Plot PDF","title":"SeisPDF.plot_pdf_in_unicode","text":"plot_pdf_in_unicode(pdf::Array{<:Real, 2})\n\nA plot function for plot test purpose. Usually you should not use this.\n\nArguments\n\npdf::Array{<:Real, 2}: a PDF matrix.\n\n\n\n\n\n","category":"function"},{"location":"pdf/#Calculate-PDF","page":"Calculate PDF","title":"Calculate PDF","text":"","category":"section"},{"location":"pdf/","page":"Calculate PDF","title":"Calculate PDF","text":"Calculate PDF.","category":"page"},{"location":"pdf/","page":"Calculate PDF","title":"Calculate PDF","text":"process_one_channel","category":"page"},{"location":"pdf/#SeisPDF.process_one_channel","page":"Calculate PDF","title":"SeisPDF.process_one_channel","text":"process_one_channel(S::SeisData; response::AbstractArray=Array{Complex{Float64}}(undef, 0), smooth_width_factor::Float64=1.25, min_db::Int64=-200, max_db::Int64=-50, divide_by_period::Bool=false)\n\nProcess the first channel of trace and return its PDF and center periods.\n\nArguments\n\nS::SeisData: A trace.\n\nOptional\n\nresponse::AbstractArray: instrument response presented in frequency domain.\nsmooth_width_factor::Float64: smoothing width factor to control the range of calculating PSD.\nmin_db::Int64: minimum threshold of PDF binning. Measured in dB.\nmax_db::Int64: maximum threshold of PDF binning. Measured in dB.\ndivide_by_period: divide each PSD bin in period rather than count. Such a non-sense.\n\n\n\n\n\n","category":"function"},{"location":"read_response/#Read-Response","page":"Read Response","title":"Read Response","text":"","category":"section"},{"location":"read_response/","page":"Read Response","title":"Read Response","text":"Read the instrument response.","category":"page"},{"location":"read_response/","page":"Read Response","title":"Read Response","text":"read_resp_from_sacpz","category":"page"},{"location":"read_response/#SeisPDF.read_resp_from_sacpz","page":"Read Response","title":"SeisPDF.read_resp_from_sacpz","text":"read_resp_from_sacpz(input_sacpz::String, sampling_rate::Float64, N::Int; flag::Int=2)\n\nRead instrument response represented in SACPZ file.\n\nArguments\n\ninput_sacpz::String: The file path of SACPZ file.\nsampling_rate::Float64: The sampling rate of trace.\nN::Int: The length of trace. Measured in number of data samples.\n\nOptional\n\nflag::Int: The flag indicated the type of instrument.\nSet 0 for Vibrometer.\nSet 1 for Velometer.\nSet 2 for Accelerometer.\n\n\n\n\n\n","category":"function"},{"location":"read_response/","page":"Read Response","title":"Read Response","text":"note: Note\nCurrently, only one-channel SACPZ file is supported, and the metadata of the instrument response is ignored.","category":"page"},{"location":"#SeisPDF.jl","page":"Home","title":"SeisPDF.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Power Spectral Density Probability Density Functions Calculation describe by McNamara 2004.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Download Julia 1.0 or later, if you haven't already. You can add SeisPDF from using Julia's package manager, by typing ] add SeisPDF in the Julia prompt.","category":"page"},{"location":"#Getting-Started","page":"Home","title":"Getting Started","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using SeisIO: read_data\nusing SeisPDF\n\n# Read input data using SeisIO\nS = read_data(\"mseed\", \"your_mseed.mseed\")\n\n# Read response from a SACPZ file\nresponse = read_resp_from_sacpz(\"your_sacpz_response\", S.fs[1], length(S.x[1]))\n\n# Get the PDF of this input data\npdf_mean_1_hour, center_periods = process_one_channel(S, response; divide_by_period=true)\n\n# Plot using GMT.jl\nplot_pdf(pdf_mean_1_hour, center_periods; show=true)","category":"page"},{"location":"","page":"Home","title":"Home","text":"We provide an example script (calculate_psd_and_plot.jl) in examples.","category":"page"}]
}
